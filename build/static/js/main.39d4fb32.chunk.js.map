{"version":3,"sources":["Components/BoardCard/BoardCards.module.css","Components/Boards/Board.module.css","Components/ViewCard/ViewCard.module.css","Components/AddCardForm/AddCardForm.module.css","Pages/CreateBoardPage/CreateBoardForm.module.css","Components/addColumnForm/AddColumnForm.module.css","Layout/NavBar/NavBar.module.css","Pages/BoardsHomePage/HomePage.module.css","Components/Columns/Columns.module.css","Components/EditDeleteIcons/EditDeleteIcons.module.css","Components/Loader/Loader.module.css","Layout/NavBar/NavBar.js","Pages/CreateBoardPage/CreateBoardForm.js","Context/Context.js","Components/Loader/Loader.js","Pages/BoardsHomePage/HomePage.js","Context/ActionTypes.js","Components/addColumnForm/AddColumnForm.js","Components/AddCardForm/AddCardForm.js","Components/EditDeleteIcons/EditDeleteIcons.js","Components/ViewCard/ViewCard.js","Components/BoardCard/BoardCards.js","Components/Columns/Columns.js","Components/Boards/Board.js","Context/Reducer.js","App.js","FirebaseConfig/FirebaseConfig.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","styles","navbar","Navbar","navbarContainer","NavbarBrand","to","style","textDecoration","Nav","NavItem","home","activeClassName","active","createBoard","CreateBoardForm","useState","nameofBoard","setNameofBoard","teamMembers","setTeamMembers","typeOfBoard","setTypeOfBoard","setData","a","firebase","database","ref","v4","set","error","console","log","head","Form","form","onSubmit","e","preventDefault","toast","type","handleSubmit","FormGroup","Label","label","Input","id","value","placeholder","onChange","target","fontSize","paddingBottom","marginBottom","members","Button","size","createButton","OrganiserContext","createContext","Loader","container","ellipsis","HomePage","props","useContext","state","dispatch","history","useHistory","boards","useEffect","payload","on","snapshot","val","loader","boardsContainer","Object","entries","map","key","onClick","push","handleClick","boardCard","boardName","button","replace","AddColumnForm","taskTitle","setTaskTitle","closeModal","selectedBoardKey","reset","isOpen","setColumn","onRequestClose","modal","overlayClassName","overlay","ariaHideApp","close","color","AddCardForm","newArray","columnKey","setMembers","description","setDescription","dueDate","setDueDate","selectedMembers","setSelectedMembers","editCard","setCardValue","setCardKey","createMembersArray","split","date","newDate","month","parseInt","formatDate","i","length","viewCard","resetForm","err","update","setCard","name","selectedOptions","multiple","selectedBoardValue","index","allTeamMembers","filter","member","indexOf","unshift","selectedMembersArray","selected","EditDeleteIcons","cardKey","cardValue","visible","setVisible","icons","icon","remove","ViewCard","headContainer","headDueDate","BoardCards","cards","undefined","Card","card","draggable","onDragStart","dataTransfer","draggesCardData","header","CardTitle","title","empty","marginLeft","deleteCard","footer","setEditCard","viewCardClick","circle","splitNames","addCard","Columns","dragggedColumnKey","onDragOver","onDrop","getData","cardTitle","float","Board","board","boardHead","then","columnContainer","boardColumnsData","display","justifyContent","alignItems","height","AddcardTitle","textAlign","action","setColumnKey","complete","setUser","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initialState","cardEditValue","App","useReducer","reducer","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.39d4fb32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BoardCards_container__7EfSj\",\"card\":\"BoardCards_card__XFTO8\",\"header\":\"BoardCards_header__2-U-Y\",\"button\":\"BoardCards_button__3w264\",\"footer\":\"BoardCards_footer__1FZWF\",\"circle\":\"BoardCards_circle__bLp3J\",\"name\":\"BoardCards_name__PaVkD\",\"icons\":\"BoardCards_icons__6pven\",\"icon\":\"BoardCards_icon__IBLZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__3Kmu2\",\"columnContainer\":\"Board_columnContainer__FTngo\",\"board\":\"Board_board__2xLap\",\"boardHead\":\"Board_boardHead__1MsiE\",\"Button\":\"Board_Button__1-Z2Y\",\"Card\":\"Board_Card__3N565\",\"icon\":\"Board_icon__1ILCX\",\"button\":\"Board_button__1l7wM\",\"cardTitle\":\"Board_cardTitle__NkBjt\",\"boardName\":\"Board_boardName__8zpo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ViewCard_modal__3uwa9\",\"headContainer\":\"ViewCard_headContainer__3u3ks\",\"headDueDate\":\"ViewCard_headDueDate__2xA-l\",\"close\":\"ViewCard_close__1P67f\",\"head\":\"ViewCard_head__2wrnT\",\"label\":\"ViewCard_label__1GhFz\",\"overlay\":\"ViewCard_overlay__r0qpF\",\"icons\":\"ViewCard_icons__1we_f\",\"icon\":\"ViewCard_icon__2LNu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AddCardForm_modal__2dYJo\",\"close\":\"AddCardForm_close__3Lklr\",\"head\":\"AddCardForm_head__2NSBx\",\"label\":\"AddCardForm_label__Ke5C9\",\"overlay\":\"AddCardForm_overlay__13eUS\",\"createButton\":\"AddCardForm_createButton__2wVcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CreateBoardForm_form__3YIUJ\",\"label\":\"CreateBoardForm_label__1_bQv\",\"createButton\":\"CreateBoardForm_createButton__5eeAo\",\"head\":\"CreateBoardForm_head__1E_6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AddColumnForm_modal__2omQX\",\"close\":\"AddColumnForm_close__1khqB\",\"head\":\"AddColumnForm_head__2riHU\",\"label\":\"AddColumnForm_label__csAJI\",\"overlay\":\"AddColumnForm_overlay__TA-IY\",\"createButton\":\"AddColumnForm_createButton__252JF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"NavBar_home__30cFQ\",\"login\":\"NavBar_login__3Q3oX\",\"signup\":\"NavBar_signup__9h50Y\",\"createBoard\":\"NavBar_createBoard__3un4j\",\"active\":\"NavBar_active__1HrHS\",\"navbar\":\"NavBar_navbar__3Dcnx\",\"logo\":\"NavBar_logo__fU0eJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePage\":\"HomePage_HomePage__2hTwX\",\"button\":\"HomePage_button__2Ts5T\",\"head\":\"HomePage_head__1vR9B\",\"boardsContainer\":\"HomePage_boardsContainer__3LI9K\",\"boardCard\":\"HomePage_boardCard__Jszbt\",\"boardName\":\"HomePage_boardName__2_gNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Columns_Card__3yGjb\",\"container\":\"Columns_container__2nWdV\",\"icon\":\"Columns_icon__3inLF\",\"button\":\"Columns_button__1A8To\",\"cardTitle\":\"Columns_cardTitle__2kd-M\",\"boardName\":\"Columns_boardName__4BHJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icons\":\"EditDeleteIcons_icons__3hPNP\",\"icon\":\"EditDeleteIcons_icon__2lai6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ellipsis\":\"Loader_ellipsis__38ZYL\",\"container\":\"Loader_container__2yrlz\",\"ellipsis1\":\"Loader_ellipsis1__32-2Y\",\"ellipsis2\":\"Loader_ellipsis2__GX3By\",\"ellipsis3\":\"Loader_ellipsis3__177Gp\"};","import React from \"react\";\nimport { Navbar, NavbarBrand, NavItem, Nav } from \"reactstrap\";\nimport styles from \"./NavBar.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction NavBar() {\n  return (\n    <div className={styles.navbar}>\n      <Navbar className={styles.navbarContainer}>\n        <NavbarBrand>\n          <NavLink\n            to=\"/\"\n            className=\"text-white\"\n            style={{ textDecoration: \"none\" }}\n          >\n            Pro-Organiser\n          </NavLink>\n        </NavbarBrand>\n        <Nav>\n          <NavItem className={styles.home}>\n            <NavLink\n              to={`/boards`}\n              className=\"text-white\"\n              style={{ textDecoration: \"none\" }}\n              activeClassName={styles.active}\n            >\n              Home\n            </NavLink>\n          </NavItem>\n          <NavItem className={styles.createBoard}>\n            <NavLink\n              to={`/createBoard`}\n              className=\"text-white\"\n              style={{ textDecoration: \"none\" }}\n              activeClassName={styles.active}\n            >\n              Create Board\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useState, Fragment } from \"react\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { v4 } from \"uuid\";\nimport styles from \"./CreateBoardForm.module.css\";\nimport firebase from \"firebase/app\";\nimport NavBar from \"../../Layout/NavBar/NavBar\";\nimport { toast } from \"react-toastify\";\n\nconst CreateBoardForm = () => {\n  const [nameofBoard, setNameofBoard] = useState();\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [typeOfBoard, setTypeOfBoard] = useState();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setData();\n    toast(\"Board Created\", { type: \"success\" });\n  };\n\n  const reset = () => {\n    setNameofBoard(\" \");\n    setTeamMembers(\" \");\n    setTypeOfBoard(\" \");\n  };\n  const setData = async () => {\n    await firebase\n      .database()\n      .ref(`/boards/${v4()}/`)\n      .set({ nameofBoard, teamMembers, typeOfBoard }, function (error) {\n        if (error) {\n          console.log(error);\n        } else {\n          reset();\n          return \"success\";\n        }\n      });\n  };\n\n  return (\n    <Fragment>\n      <NavBar></NavBar>\n      <div>\n        <p className={styles.head}> Create Your Board</p>\n        <Form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\n          <FormGroup>\n            <Label className={styles.label}>Name of Board</Label>\n            <Input\n              type=\"text\"\n              id=\"name\"\n              value={nameofBoard}\n              placeholder=\"Enter Your Board Name \"\n              onChange={(e) => setNameofBoard(e.target.value)}\n            ></Input>\n          </FormGroup>\n          <FormGroup>\n            <Label className={styles.label}>\n              Team Members{\" \"}\n              <p\n                style={{\n                  fontSize: \"12px\",\n                  paddingBottom: \"0px\",\n                  marginBottom: \"0px\",\n                }}\n              >\n                \n              </p>\n            </Label>\n            <Input\n              type=\"text\"\n              id=\"team\"\n              value={teamMembers}\n              placeholder=\"Enter Your Team Members \"\n              onChange={(e) => setTeamMembers(e.target.value)}\n              className={styles.members}\n            ></Input>\n          </FormGroup>\n          <FormGroup>\n            <Label className={styles.label}>Type of Board</Label>\n            <Input\n              type=\"text\"\n              id=\"type\"\n              value={typeOfBoard}\n              placeholder=\"e.g. Design board, Testing board, etc.\"\n              onChange={(e) => setTypeOfBoard(e.target.value)}\n            ></Input>\n          </FormGroup>\n          <Button\n            size=\"md\"\n            id=\"CreateBoard\"\n            type=\"submit\"\n            className={styles.createButton}\n          >\n            Create Board\n          </Button>\n        </Form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CreateBoardForm;\n","import { createContext } from \"react\";\n\nexport const OrganiserContext = createContext();\n","import React from \"react\";\nimport styles from \"./Loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <div className={styles.container}>\n      <div>\n        <div className={styles.ellipsis}>\n          <h5>Loading</h5>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useContext, Fragment, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"./HomePage.module.css\";\nimport { OrganiserContext } from \"../../Context/Context\";\nimport {\n  SELECTED_BOARD_KEY,\n  GET_DATA,\n  LOADER,\n} from \"../../Context/ActionTypes\";\nimport { Button } from \"reactstrap\";\nimport NavBar from \"../../Layout/NavBar/NavBar\";\nimport firebase from \"firebase/app\";\nimport Loader from \"../../Components/Loader/Loader\";\n\nfunction HomePage(props) {\n  const { state, dispatch } = useContext(OrganiserContext);\n  const history = useHistory();\n  console.log(state.boards);\n  const handleClick = (key, value) => {\n    dispatch({\n      type: SELECTED_BOARD_KEY,\n      payload: { key, value },\n    });\n    history.push(`/board/${key}/${value.nameofBoard}`);\n  };\n  const openCreateBoard = () => {\n    history.replace(`/createBoard`);\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: LOADER,\n      payload: true,\n    });\n    const boardsRef = firebase.database().ref(`/boards`);\n    boardsRef.on(\"value\", (snapshot) => {\n      dispatch({\n        type: GET_DATA,\n        payload: snapshot.val(),\n      });\n      dispatch({\n        type: LOADER,\n        payload: false,\n      });\n    });\n\n    console.log(\"stopped\");\n  }, [dispatch]);\n\n  if (state.loader === true) {\n    return (\n      <>\n        <NavBar></NavBar>\n\n        <Loader></Loader>\n      </>\n    );\n  }\n  return (\n    <Fragment>\n      <NavBar></NavBar>\n      <div className={styles.HomePage}>\n        <div className={styles.head}>Boards</div>\n        {state.boards !== null && state.loader === false ? (\n          <div className={styles.boardsContainer}>\n            {Object.entries(state.boards).map(([key, value]) => (\n              <div key={key} onClick={() => handleClick(key, value)}>\n                <div className={styles.boardCard}>\n                  <p className={styles.boardName}>{value.nameofBoard}</p>\n                </div>\n              </div>\n            ))}{\" \"}\n          </div>\n        ) : null}\n        {state.boards === null && state.loader === false ? (\n          <>\n            <p>\n              You haven't created any boards. Kindly click on the 'Create Board'\n              button in the navigation bar to create a board.\n            </p>\n            <Button className={styles.button} onClick={() => openCreateBoard()}>\n              Create Board\n            </Button>\n          </>\n        ) : null}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default HomePage;\n","export const SET_CARD = \"SET_CARD\";\nexport const SET_COLUMN = \"ADD_COLUMN\";\nexport const VIEW_CARD = \"VIEW_CARD\";\nexport const GET_DATA = \"GET_DATA\";\nexport const SELECTED_BOARD_KEY = \"SELECTED_BOARD_KEY\";\nexport const SELECTED_BOARD_VALUES = \"SELECTED_BOARD_VALUES\";\nexport const COLUMN_KEY = \"COLUMN_KEY\";\nexport const CARD_KEY = \"CARD_KEY\";\nexport const GET_BOARD_COLUMN_DATA = \"GET_BOARD_COLUMN_DATA\";\nexport const DELETE_COLUMN = \"DELETE_COLUMN\";\nexport const DELETE_CARD = \"DELETE_CARD\";\nexport const EDIT_CARD = \"EDIT_CARD\";\nexport const DRAG_DROP = \"DRAG_DROP\";\nexport const USER_AUTH = \"USER_AUTH\";\nexport const USER_AUTH_ERROR = \"USER_AUTH_ERROR\";\nexport const LOADER = \"LOADER\";\n","import React, { useState, useContext } from \"react\";\nimport styles from \"./AddColumnForm.module.css\";\nimport Modal from \"react-modal\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport { OrganiserContext } from \"../../Context/Context\";\nimport { SET_COLUMN } from \"../../Context/ActionTypes\";\nimport firebase from \"firebase/app\";\nimport { v4 } from \"uuid\";\n\nconst AddColumnForm = () => {\n  const [taskTitle, setTaskTitle] = useState();\n\n  const { state, dispatch } = useContext(OrganiserContext);\n\n  const closeModal = () => {\n    dispatch({\n      type: SET_COLUMN,\n      payload: false,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await firebase\n      .database()\n      .ref(`/boards/${state.selectedBoardKey}/columns/${v4()}/`)\n      .set({ taskTitle }, function (error) {\n        if (error) {\n          console.log(error);\n        } else {\n          reset();\n        }\n      });\n  };\n\n  const reset = () => {\n    setTaskTitle(\" \");\n  };\n  return (\n    <Modal\n      isOpen={state.setColumn}\n      onRequestClose={() => closeModal()}\n      className={styles.modal}\n      overlayClassName={styles.overlay}\n      ariaHideApp={false}\n    >\n      <div className={styles.close}>\n        <FaTimesCircle\n          size={25}\n          color=\"grey\"\n          onClick={() => closeModal()}\n        ></FaTimesCircle>\n      </div>\n\n      <p className={styles.head}> Add Column</p>\n      <Form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\n        <FormGroup>\n          <Label className={styles.label}>Enter a column name:</Label>\n          <Input\n            type=\"text\"\n            id=\"column_name\"\n            value={taskTitle}\n            placeholder=\"\"\n            onChange={(e) => setTaskTitle(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <Button\n          type=\"submit\"\n          id=\"CreateColumn\"\n          onChange={(e) => setTaskTitle(e.target.value)}\n          size=\"md\"\n          className={styles.createButton}\n        >\n          Add Column\n        </Button>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddColumnForm;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styles from \"./AddCardForm.module.css\";\nimport Modal from \"react-modal\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport { OrganiserContext } from \"../../Context/Context\";\nimport { SET_CARD, EDIT_CARD, VIEW_CARD } from \"../../Context/ActionTypes\";\nimport { v4 } from \"uuid\";\nimport firebase from \"firebase/app\";\n\nconst AddCardForm = ({ columnKey }) => {\n  const [taskTitle, setTaskTitle] = useState();\n  const [members, setMembers] = useState([]);\n  const [description, setDescription] = useState();\n  const [dueDate, setDueDate] = useState();\n  const [selectedMembers, setSelectedMembers] = useState([]);\n\n  const { state, dispatch } = useContext(OrganiserContext);\n  const { editCard, setCardValue, setCardKey } = state;\n\n  const createMembersArray = (members) => {\n    let membersString = members;\n    let membersArray = membersString.split(\",\");\n    return membersArray;\n  };\n\n  const formatDate = (dueDate) => {\n    let newDate = dueDate.split(\"-\");\n    let months = [\n      \"None\",\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    let month = months[parseInt(newDate[1])];\n    let formattedDate = `${newDate[2]} ${month} ${newDate[0]}`;\n    return formattedDate;\n  };\n  const handleChangeMembers = (selectedOptions) => {\n    setSelectedMembers([]);\n    setSelectedMembers(selectedOptions);\n    setMembers([]);\n  };\n\n  let newArray;\n  const selectedMembersArray = (allTeamMembers) => {\n    console.log(members);\n    let teamMembers = createMembersArray(allTeamMembers);\n    newArray = teamMembers.filter((member) => members.indexOf(member) === -1);\n    console.log(newArray);\n    for (let i = 0; i < members.length; i++) {\n      newArray.unshift(members[i]);\n    }\n\n    return newArray;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let date = formatDate(dueDate);\n    for (let i = 0; i < selectedMembers.length; i++) {\n      console.log(selectedMembers[i].value);\n      console.log(members);\n      members.push(selectedMembers[i].value);\n    }\n    console.log(selectedMembers);\n\n    dispatch({\n      type: EDIT_CARD,\n      payload: { editCard: false },\n    });\n    dispatch({\n      type: VIEW_CARD,\n      payload: { viewCard: false },\n    });\n\n    console.log(\"sdas\");\n    if (editCard === true) {\n      try {\n        console.log(\"database\");\n        firebase\n          .database()\n          .ref(\n            `/boards/${state.selectedBoardKey}/columns/${columnKey}/cards/${setCardKey}`\n          )\n          .set({ members }, (error) => {\n            if (error) {\n              console.log(error);\n            } else {\n              resetForm();\n              console.log(\"success\");\n            }\n          });\n      } catch (err) {\n        console.log(err);\n      }\n      try {\n        firebase\n          .database()\n          .ref(\n            `/boards/${state.selectedBoardKey}/columns/${columnKey}/cards/${setCardKey}`\n          )\n          .update({ taskTitle, description, date }, (error) => {\n            if (error) {\n              console.log(error);\n            } else {\n              resetForm();\n              console.log(\"success\");\n            }\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      try {\n        console.log(\"database\");\n\n        firebase\n          .database()\n          .ref(\n            `/boards/${\n              state.selectedBoardKey\n            }/columns/${columnKey}/cards/${v4()}`\n          )\n          .set({ taskTitle, members, description, date }, (error) => {\n            if (error) {\n              console.log(error);\n            } else {\n              resetForm();\n              console.log(\"success\");\n            }\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(\"editcardFalse\");\n  };\n\n  useEffect(() => {\n    if (editCard === true) {\n      setTaskTitle(setCardValue.taskTitle);\n      setDescription(setCardValue.description);\n      setMembers(setCardValue.members);\n      setDueDate(setCardValue.dueDate);\n    }\n  }, [setCardValue, editCard]);\n\n  const resetForm = () => {\n    setTaskTitle(\"\");\n    setDescription(\"\");\n    setDueDate(\"\");\n    setMembers(\"\");\n  };\n  const closeModal = () => {\n    resetForm();\n    dispatch({\n      type: SET_CARD,\n      payload: false,\n    });\n    dispatch({\n      type: EDIT_CARD,\n      payload: { editCard: false },\n    });\n    dispatch({\n      type: VIEW_CARD,\n      payload: { viewCard: false },\n    });\n  };\n  return (\n    <Modal\n      isOpen={state.setCard || editCard}\n      onRequestClose={() => closeModal()}\n      className={styles.modal}\n      overlayClassName={styles.overlay}\n    >\n      <div className={styles.close}>\n        <FaTimesCircle\n          size={30}\n          color=\"grey\"\n          onClick={() => closeModal()}\n        ></FaTimesCircle>\n      </div>\n      <p className={styles.head}> Add Task</p>\n      <Form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\n        <FormGroup>\n          <Label className={styles.label}>Title for Task</Label>\n          <Input\n            type=\"text\"\n            id=\"title\"\n            value={taskTitle}\n            placeholder=\"e.g Add a new icon\"\n            onChange={(e) => setTaskTitle(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Label className={styles.label}>\n            Choose members for this task(select, multiple if needed)\n            <p\n              style={{\n                fontSize: \"12px\",\n                paddingBottom: \"0px\",\n                marginBottom: \"0px\",\n              }}\n            ></p>\n          </Label>\n          <Input\n            type=\"select\"\n            name=\"select\"\n            id=\"exampleSelect\"\n            onChange={(e) => handleChangeMembers(e.target.selectedOptions)}\n            multiple\n          >\n            {editCard === false\n              ? createMembersArray(state.selectedBoardValue.teamMembers).map(\n                  (value, index) => (\n                    <option value={value} key={index}>\n                      {value}\n                    </option>\n                  )\n                )\n              : selectedMembersArray(state.selectedBoardValue.teamMembers).map(\n                  (value, index) => {\n                    if (index < members.length) {\n                      return (\n                        <option value={value} key={index} selected>\n                          {value}\n                        </option>\n                      );\n                    } else {\n                      return (\n                        <option value={value} key={index}>\n                          {value}\n                        </option>\n                      );\n                    }\n                  }\n                )}\n          </Input>\n        </FormGroup>\n        <FormGroup>\n          <Label className={styles.label}>Type of Board</Label>\n          <Input\n            type=\"text\"\n            id=\"description\"\n            placeholder=\"Add your description here\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Label className={styles.label}>Due Date</Label>\n          <Input\n            type=\"date\"\n            id=\"due_date\"\n            value={dueDate}\n            onChange={(e) => setDueDate(e.target.value)}\n          />\n        </FormGroup>\n        <Button\n          size=\"md\"\n          id=\"CreateCard\"\n          type=\"submit\"\n          className={styles.createButton}\n        >\n          {state.editCard === true ? \"Save Changes\" : \"Add Card\"}\n        </Button>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddCardForm;\n","import React, { useState, useContext } from \"react\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\nimport styles from \"./EditDeleteIcons.module.css\";\nimport AddCardForm from \"../AddCardForm/AddCardForm\";\nimport { OrganiserContext } from \"../../Context/Context\";\nimport { VIEW_CARD, EDIT_CARD } from \"../../Context/ActionTypes\";\nimport firebase from \"firebase/app\";\n\nconst EditDeleteIcons = ({ cardKey, columnKey, cardValue }) => {\n  const { state, dispatch } = useContext(OrganiserContext);\n  const [visible, setVisible] = useState(false);\n\n  const setEditCard = () => {\n    setVisible(true);\n\n    dispatch({\n      type: EDIT_CARD,\n      payload: {\n        key: cardKey,\n        columnKey,\n        value: cardValue,\n        editCard: true,\n      },\n    });\n  };\n\n  const deleteCard = () => {\n    console.log(\"click\");\n    firebase\n      .database()\n      .ref(\n        `/boards/${state.selectedBoardKey}/columns/${columnKey}/cards/${cardKey}`\n      )\n      .remove();\n\n    dispatch({\n      type: VIEW_CARD,\n      payload: {\n        viewCard: false,\n      },\n    });\n  };\n  return (\n    <>\n      <span className={styles.icons} key={cardKey}>\n        <span className={styles.icon}>\n          <MdEdit size={20} onClick={() => setEditCard()}></MdEdit>\n        </span>\n        <span className={styles.icon}>\n          <MdDelete size={20} onClick={() => deleteCard()}></MdDelete>\n        </span>\n      </span>\n      {visible === true ? (\n        <AddCardForm columnKey={columnKey}></AddCardForm>\n      ) : null}\n    </>\n  );\n};\n\nexport default EditDeleteIcons;\n","import React, { useContext } from \"react\";\nimport styles from \"./ViewCard.module.css\";\nimport Modal from \"react-modal\";\nimport { Form, FormGroup, Label } from \"reactstrap\";\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport EditDeleteIcons from \"../EditDeleteIcons/EditDeleteIcons\";\nimport { OrganiserContext } from \"../../Context/Context\";\nimport { VIEW_CARD } from \"../../Context/ActionTypes\";\n\nconst ViewCard = ({ columnKey }) => {\n  const { state, dispatch } = useContext(OrganiserContext);\n  const { setCardValue, viewCard, setCardKey } = state;\n\n  const closeModal = () => {\n    dispatch({\n      type: VIEW_CARD,\n      payload: { viewCard: false },\n    });\n  };\n  return (\n    <Modal\n      isOpen={viewCard}\n      onRequestClose={() => closeModal()}\n      className={styles.modal}\n      overlayClassName={styles.overlay}\n    >\n      <div className={styles.close}>\n        <EditDeleteIcons\n          columnKey={columnKey}\n          cardKey={setCardKey}\n          cardValue={setCardValue}\n        ></EditDeleteIcons>\n        <FaTimesCircle\n          size={25}\n          color=\"grey\"\n          onClick={() => closeModal()}\n        ></FaTimesCircle>\n      </div>\n      <div className={styles.headContainer}>\n        <p className={styles.head}>Task</p>\n        <p className={styles.headDueDate}>\n          {\" \"}\n          {setCardValue !== null ? setCardValue.date : null}\n        </p>\n      </div>\n      {setCardValue !== null ? (\n        <Form className={styles.form}>\n          <FormGroup>\n            <Label className={styles.label}>Title for Task</Label>\n            <p>{setCardValue.taskTitle}</p>\n            <p></p>\n          </FormGroup>\n          <FormGroup>\n            <Label className={styles.label}>Team Members</Label>\n            <p>{setCardValue.members}</p>\n\n            <p></p>\n          </FormGroup>\n          <FormGroup>\n            <Label className={styles.label}>Type of Board</Label>\n            <p>{setCardValue.description}</p>\n\n            <p></p>\n          </FormGroup>\n          <FormGroup>\n            <Label className={styles.label}>Due Date</Label>\n            <p>{setCardValue.date}</p>\n\n            <p></p>\n          </FormGroup>\n        </Form>\n      ) : null}\n    </Modal>\n  );\n};\n\nexport default ViewCard;\n","import React, { useState, useContext } from \"react\";\nimport { Card, CardTitle, Button } from \"reactstrap\";\nimport styles from \"./BoardCards.module.css\";\nimport ViewCard from \"../ViewCard/ViewCard\";\nimport AddCardForm from \"../AddCardForm/AddCardForm\";\nimport { OrganiserContext } from \"../../Context/Context\";\nimport {\n  VIEW_CARD,\n  SET_CARD,\n  EDIT_CARD,\n  DRAG_DROP,\n} from \"../../Context/ActionTypes\";\nimport { MdViewList, MdEdit, MdDelete } from \"react-icons/md\";\nimport firebase from \"firebase/app\";\nimport { toast } from \"react-toastify\";\n\nconst BoardCards = ({ cards, columnKey }) => {\n  const { state, dispatch } = useContext(OrganiserContext);\n  const [visible, setVisible] = useState(false);\n\n  const splitNames = (member) => {\n    let split = member.split(\":\");\n    return split[0];\n  };\n\n  const viewCardClick = (key, value) => {\n    console.log(key);\n\n    dispatch({\n      type: VIEW_CARD,\n      payload: {\n        key,\n        value,\n        viewCard: true,\n      },\n    });\n  };\n\n  const setEditCard = (key, value) => {\n    setVisible(true);\n\n    dispatch({\n      type: EDIT_CARD,\n      payload: {\n        key,\n        value,\n        editCard: true,\n      },\n    });\n  };\n\n  const addCardClick = () => {\n    setVisible(true);\n\n    dispatch({\n      type: SET_CARD,\n      payload: { addCard: true, columnKey },\n    });\n  };\n  const deleteCard = (key) => {\n    console.log(\"click\");\n    toast(\"deleted Successfully\", { type: \"success\" });\n    firebase\n      .database()\n      .ref(\n        `/boards/${state.selectedBoardKey}/columns/${columnKey}/cards/${key}`\n      )\n      .remove();\n  };\n  const onDragStart = (e, cardKey, cardValue) => {\n    console.log(e, cardKey, cardValue);\n    e.dataTransfer.setData(\"text/plain\", cardKey);\n    dispatch({\n      type: DRAG_DROP,\n      payload: { columnKey: columnKey, draggesCardData: cardValue },\n    });\n  };\n  return (\n    <div key={columnKey}>\n      <div>\n        <div className={styles.container}>\n          {cards !== undefined\n            ? Object.entries(cards).map(([key, value]) => (\n                <Card\n                  className={styles.card}\n                  key={key}\n                  value={value}\n                  id={key}\n                  draggable\n                  onDragStart={(e) => onDragStart(e, key, value)}\n                >\n                  <div className={styles.header}>\n                    <div>\n                      <CardTitle className={styles.title}>\n                        {value.taskTitle}\n                      </CardTitle>\n                    </div>\n                    <div className={styles.empty}></div>\n                    <div\n                      style={{ marginLeft: \"6px\", color: \"rgb(70, 69, 69)\" }}\n                    >\n                      <MdDelete\n                        className={styles.icon}\n                        onClick={() => deleteCard(key)}\n                        size={20}\n                      ></MdDelete>\n                    </div>\n                  </div>\n                  <div className={styles.footer}>\n                    <span className={styles.icons}>\n                      <span className={styles.icon}>\n                        <MdEdit\n                          onClick={() => setEditCard(key, value)}\n                          size={20}\n                        ></MdEdit>\n                      </span>\n                      <span className={styles.icon}>\n                        <MdViewList\n                          onClick={() => viewCardClick(key, value)}\n                          size={25}\n                        ></MdViewList>\n                      </span>\n                    </span>\n                    {value.members\n                      ? value.members.map((member) => (\n                          <span className={styles.circle}>\n                            <span className={styles.name}>\n                              {splitNames(member)}\n                            </span>\n                          </span>\n                        ))\n                      : null}\n                  </div>\n                </Card>\n              ))\n            : null}\n        </div>\n        <Button className={styles.button} onClick={() => addCardClick()}>\n          Add Card\n        </Button>\n      </div>\n      {state.viewCard === true ? (\n        <ViewCard columnKey={columnKey}></ViewCard>\n      ) : null}\n      {visible && <AddCardForm columnKey={columnKey}></AddCardForm>}\n    </div>\n  );\n};\n\nexport default BoardCards;\n","import React, { useContext } from \"react\";\nimport { Card, CardTitle } from \"reactstrap\";\nimport styles from \"./Columns.module.css\";\nimport BoardCards from \"../BoardCard/BoardCards\";\n//import Columns from \"../Columns/Columns\"\nimport { MdDelete } from \"react-icons/md\";\nimport { OrganiserContext } from \"../../Context/Context\";\n\nimport firebase from \"firebase/app\";\n\nconst Columns = ({ columnKey, value }) => {\n  const { state } = useContext(OrganiserContext);\n  const { dragggedColumnKey, draggesCardData, selectedBoardKey } = state;\n\n  const deleteColumn = () => {\n    firebase\n      .database()\n      .ref(`/boards/${selectedBoardKey}/columns/${columnKey}`)\n      .remove();\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n    console.log(\"Dragged over column\");\n  };\n\n  const onDrop = (e, columnKey) => {\n    console.log(\" Dropover column\");\n\n    let id = e.dataTransfer.getData(\"text\");\n\n    if (state.draggesCardData !== undefined) {\n      console.log(\"success\");\n      firebase\n        .database()\n        .ref(\n          `/boards/${state.selectedBoardKey}/columns/${dragggedColumnKey}/cards/${id}`\n        )\n        .remove();\n\n      firebase\n        .database()\n        .ref(\n          `/boards/${state.selectedBoardKey}/columns/${columnKey}/cards/${id}`\n        )\n        .set(draggesCardData);\n    }\n  };\n\n  return (\n    <div key={columnKey} className={styles.container}>\n      <Card\n        key={columnKey}\n        className={styles.Card}\n        onDragOver={(e) => onDragOver(e)}\n        onDrop={(e) => onDrop(e, columnKey)}\n      >\n        <CardTitle className={styles.cardTitle}>\n          {value.taskTitle}\n          <span style={{ float: \"right\" }}>\n            <MdDelete onClick={() => deleteColumn()} size={20}></MdDelete>\n          </span>\n        </CardTitle>\n        <BoardCards cards={value.cards} columnKey={columnKey}></BoardCards>\n      </Card>\n    </div>\n  );\n};\n\nexport default Columns;\n","import React, { useContext, useEffect, Fragment } from \"react\";\nimport { Card, CardTitle, Button } from \"reactstrap\";\nimport styles from \"./Board.module.css\";\n\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport AddColumnForm from \"../addColumnForm/AddColumnForm\";\nimport { OrganiserContext } from \"../../Context/Context\";\nimport { SET_COLUMN, GET_BOARD_COLUMN_DATA } from \"../../Context/ActionTypes\";\nimport firebase from \"firebase/app\";\nimport Columns from \"../Columns/Columns\";\nimport NavBar from \"../../Layout/NavBar/NavBar\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Board = () => {\n  const { state, dispatch } = useContext(OrganiserContext);\n\n  const history = useHistory();\n\n  const setModal = () => {\n    dispatch({\n      type: SET_COLUMN,\n      payload: true,\n    });\n  };\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(`/boards/${state.selectedBoardKey}/columns/`)\n      .on(\"value\", (snapshot) => {\n        dispatch({\n          type: GET_BOARD_COLUMN_DATA,\n          payload: snapshot.val(),\n        });\n      });\n  }, [dispatch, state.selectedBoardKey]);\n\n  const deleteHandler = () => {\n    console.log(\"click\");\n    firebase\n      .database()\n      .ref(`/boards/${state.selectedBoardKey}/`)\n      .remove()\n      .then(() => {\n        console.log(\"deleted\");\n        history.replace(\"/boards\");\n      });\n  };\n\n  return (\n    <Fragment className={styles.container}>\n      <NavBar className={styles.NavBar}></NavBar>\n\n      <div className={styles.board}>\n        {state.selectedBoardValue !== null ? (\n          <>\n            <div className={styles.boardHead}>\n              <p className={styles.boardName}>\n                {state.selectedBoardValue.nameofBoard}\n              </p>\n              <Button\n                onClick={() => deleteHandler()}\n                color=\"danger\"\n                className={styles.Button}\n              >\n                Delele Board\n              </Button>\n            </div>\n\n            <div className={styles.container}>\n              <div className={styles.columnContainer}>\n                {state.boardColumnsData !== null\n                  ? Object.entries(\n                      state.boardColumnsData\n                    ).map(([key, value]) => (\n                      <Columns\n                        key={key}\n                        columnKey={key}\n                        value={value}\n                      ></Columns>\n                    ))\n                  : null}\n              </div>\n\n              <div>\n                <Card\n                  className={styles.Card}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100px\",\n                  }}\n                  onClick={() => setModal()}\n                >\n                  <CardTitle\n                    className={styles.AddcardTitle}\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Add a column\n                  </CardTitle>\n                  <div className={styles.icon}>\n                    <AiOutlinePlusCircle size={30} color=\"grey\" />\n                  </div>\n                </Card>\n              </div>\n            </div>\n            <AddColumnForm></AddColumnForm>\n          </>\n        ) : null}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Board;\n","import {\n  SET_CARD,\n  SET_COLUMN,\n  VIEW_CARD,\n  GET_DATA,\n  SELECTED_BOARD_KEY,\n  CARD_KEY,\n  COLUMN_KEY,\n  GET_BOARD_COLUMN_DATA,\n  EDIT_CARD,\n  DRAG_DROP,\n  USER_AUTH,\n  USER_AUTH_ERROR,\n  LOADER,\n} from \"./ActionTypes\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_DATA:\n      return {\n        ...state,\n        boards: action.payload,\n      };\n    case SELECTED_BOARD_KEY:\n      return {\n        ...state,\n        selectedBoardKey: action.payload.key,\n        selectedBoardValue: action.payload.value,\n      };\n    case VIEW_CARD:\n      return {\n        ...state,\n        viewCard: action.payload.viewCard,\n        setCardKey: action.payload.key,\n        setColumnKey: action.payload.columnKey,\n        setCardValue: action.payload.value,\n      };\n    case EDIT_CARD:\n      return {\n        ...state,\n        editCard: action.payload.editCard,\n        setCardKey: action.payload.key,\n        setColumnKey: action.payload.columnKey,\n        setCardValue: action.payload.value,\n      };\n    case SET_CARD:\n      return {\n        ...state,\n        editCard: false,\n        setCard: action.payload.addCard,\n        setColumnKey: action.payload.columnKey,\n      };\n    case LOADER:\n      return {\n        ...state,\n        loader: action.payload,\n      };\n    case DRAG_DROP:\n      return {\n        ...state,\n        draggesCardData: action.payload.draggesCardData,\n        dragggedColumnKey: action.payload.columnKey,\n        complete: action.payload.complete,\n      };\n    case USER_AUTH:\n      return {\n        ...state,\n        setUser: action.payload,\n      };\n    case USER_AUTH_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case SET_COLUMN:\n      return {\n        ...state,\n        setColumn: action.payload,\n      };\n\n    case CARD_KEY:\n      return {\n        ...state,\n        setCardKey: action.payload.key,\n      };\n    case COLUMN_KEY:\n      return {\n        ...state,\n        setColumnKey: action.payload,\n      };\n    case GET_BOARD_COLUMN_DATA:\n      return {\n        ...state,\n        boardColumnsData: action.payload,\n      };\n\n    // case SELECTED_BOARD_VALUES:\n    //   console.log(action.payload);\n    //   return {\n    //     ...state,\n    //     selectedBoardValue: action.payload,\n    //   };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CreateBoardForm from \"./Pages/CreateBoardPage/CreateBoardForm\";\nimport HomePage from \"./Pages/BoardsHomePage/HomePage\";\nimport Board from \"./Components/Boards/Board\";\nimport { OrganiserContext } from \"./Context/Context\";\nimport reducer from \"./Context/Reducer\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport { firebaseConfig } from \"./FirebaseConfig/FirebaseConfig\";\n\nfirebase.initializeApp(firebaseConfig);\n\nconst initialState = {\n  boards: null,\n  selectedBoardKey: null,\n  selectedBoardValue: null,\n  viewCard: false,\n  setCardKey: null,\n  setColumnKey: null,\n  setCardValue: null,\n  editCard: false,\n  setCard: false,\n  dragggedColumnKey: null,\n  draggesCardData: null,\n  setUser: null,\n  error: null,\n  complete: [],\n  setColumn: false,\n  boardColumnsData: null,\n  cardEditValue: {},\n  loader: false,\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Router>\n      <OrganiserContext.Provider value={{ state, dispatch }}>\n        <ToastContainer />\n\n        <Switch>\n          <Route exact path={`/`} component={HomePage} />\n\n          <Route exact path={`/boards`} component={HomePage} />\n\n          <Route exact path=\"/createBoard\" component={CreateBoardForm} />\n\n          <Route\n            exact\n            path=\"/board/:boardKey/:boardName\"\n            component={Board}\n          ></Route>\n        </Switch>\n      </OrganiserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyDlryCXYjcRQHVNipWIFJRwRUmc1tUwn44\",\n  authDomain: \"pro-organizer-app-9876f.firebaseapp.com\",\n  databaseURL: \"https://pro-organizer-app-9876f.firebaseio.com\",\n  projectId: \"pro-organizer-app-9876f\",\n  storageBucket: \"pro-organizer-app-9876f.appspot.com\",\n  messagingSenderId: \"695514874953\",\n  appId: \"1:695514874953:web:f780d7826c0ce20f2dab98\"\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}